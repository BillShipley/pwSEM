% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pwsem.R
\name{pwSEM}
\alias{pwSEM}
\title{The pwSEM function}
\usage{
pwSEM(
  sem.functions,
  dependent.errors = NULL,
  data,
  use.permutations = FALSE,
  n.perms = 5000,
  do.smooth = FALSE,
  all.grouping.vars = NULL
)
}
\arguments{
\item{sem.functions}{A list giving the gamm4 (gamm4 package) or gam (mgcv package) models associated with each
variable in the sem, INCLUDING exogenous variables.}

\item{dependent.errors}{A list giving any dependent errors (correlated error variables), given
in the form of list(X~~Y,...,X~~Z).}

\item{data}{A data frame containing the empirical data}

\item{use.permutations}{A logical value (TRUE, FALSE) indicating if you
want to use permutation probabilities for the d-separation tests. Defaults
to FALSE. You should use TRUE for smaller data sets.}

\item{n.perms}{The number of permutation runs to use for permutation probabilities.
Defaults to 5000.}

\item{do.smooth}{A logical value indicating if you want to use regression
smoothers (generalized additive models) for the dsep tests.  Defaults to FALSE.
TRUE will fit nonlinear (regression smoothers) when evaluating the d-separation
claims, but this will slow down the function.}

\item{all.grouping.vars}{A character vector giving the names of all
variables involved in the sem functions that define groups for
random effects.}
}
\value{
A list containing the following elements:
causal.graph, dsep.equivalent.causal.graph, basis.set,
dsep.probs, sem.functions,C.statistic, prob.C.statistic,
AIC, n.data.lines, use.permutations, n.perms
}
\description{
This function performs a "piecewise" structural equation model without explicit latent variables
(a "path" model),
possibly including with dependent errors, based on generalized
linear or additive models, possibly in a mixed model context, and then tests
the causal structure against an empirical data set using a dsep test.  Therefore, it is able to
model linear, generalized linear, generalized linear mixed, additive, generalized additive, and
generalized additive mixed models.
}
\examples{
# Example with correlated endogenous errors, normally distributed variables
# and no nesting structure in the data
# "sim_normal.no.nesting" is included with this package
# DAG: X1->X2->X3->X4 and X2<->X4
# CREATE A LIST HOLDING THE STRUCTURAL EQUATIONS USING gam()
library(mgcv)
my.list<-list(mgcv::gam(X1~1,data=sim_normal.no.nesting,family=gaussian),
         mgcv::gam(X2~X1,data=sim_normal.no.nesting,family=gaussian),
         mgcv::gam(X3~X2,data=sim_normal.no.nesting,family=gaussian),
         mgcv::gam(X4~X3,data=sim_normal.no.nesting,family=gaussian))
# RUN THE pwSEM FUNCTION WITH PERMUTATION PROBABILITIES AND INCLUDING THE DEPENDENT ERRORS
out<-pwSEM(sem.functions=my.list,dependent.errors=list(X4~~X2),
          data=sim_normal.no.nesting,use.permutations = TRUE)
summary(out,structural.equations=TRUE)

# Example with correlated endogenous errors, Poisson distributed variables
# and no nesting structure in the data
# "sim_poisson.no.nesting" is included with package
# DAG: X1->X2->X3->X4 and X2<->X4
# CREATE A LIST HOLDING THE STRUCTURAL EQUATIONS USING gam()
library(mgcv)
my.list<-list(mgcv::gam(X1~1,data=sim_poisson.no.nesting,family=gaussian),
         mgcv::gam(X2~X1,data=sim_poisson.no.nesting,family=poisson),
         mgcv::gam(X3~X2,data=sim_poisson.no.nesting,family=poisson),
         mgcv::gam(X4~X3,data=sim_poisson.no.nesting,family=poisson))
# RUN THE pwSEM FUNCTION WITH PERMUTATION PROBABILITIES WITH 10000
# PERMUTATIONS AND INCLUDING THE DEPENDENT ERRORS
out<-pwSEM(sem.functions=my.list,dependent.errors=list(X4~~X2),
          data=sim_poisson.no.nesting,use.permutations = TRUE,n.perms=10000)
summary(out,structural.equations=TRUE)

# Simulated data with correlated errors involving endogenous
# variables, normally-distributed data and with a 2-level grouping
# structure and using smoothing splines for the d-separation tests.
# Data generated using this mixed acyclic graph:
# X1->X2->X3->X4 and X2<->X4

my.list<-list(gamm4::gamm4(X1~1,random=~(1|group),data=sim_normal.with.nesting,family=gaussian),
         gamm4::gamm4(X2~X1,random=~(1|group),data=sim_normal.with.nesting,family=gaussian),
         gamm4::gamm4(X3~X2,random=~(1|group),data=sim_normal.with.nesting,family=gaussian),
         gamm4::gamm4(X4~X3,random=~(1|group),data=sim_normal.with.nesting,family=gaussian))
# RUN THE pwSEM FUNCTION WITH PERMUTATION PROBABILITIES AND INCLUDING THE DEPENDENT ERRORS
out<-pwSEM(sem.functions=my.list,dependent.errors=list(X4~~X2),
          data=sim_normal.with.nesting,use.permutations = TRUE,
          do.smooth=TRUE,all.grouping.vars=c("group"))
summary(out,structural.equations=TRUE)
# Empirical example with normal and binomial data,a 3-level nesting structure
# using "nested_data" (included with this package)
# CREATE A LIST HOLDING THE STRUCTURAL EQUATIONS USING gamm4()
# RUN THE pwSEM FUNCTION WITHOUT PERMUTATION PROBABILITIES AND INCLUDING THE DEPENDENT ERRORS
library(gamm4)
my.list<-list(gamm4::gamm4(XF~1,random=~(1|nest)+(1|year),family="gaussian",data=nested_data),
   gamm4::gamm4(XP~1,random=~(1|nest)+(1|year),family="gaussian",data=nested_data),
   gamm4::gamm4(XM~XP+XF+XH,random=~(1|nest)+(1|year),family="gaussian",data=nested_data),
   gamm4::gamm4(XH~XP+XF,random=~(1|nest)+(1|year),family="gaussian",data=nested_data),
   gamm4::gamm4(XR~XM+XH,family="binomial",random=~(1|nest)+(1|year),data=nested_data))
summary(pwSEM(sem.functions=my.list,data=nested_data,
      use.permutations=FALSE,do.smooth=FALSE,dependent.errors=list(XP~~XF),
      all.grouping.vars=c("nest","year")))

}
